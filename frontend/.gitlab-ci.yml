variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ./.m2/repository
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
include:
  - template: Security/SAST.gitlab-ci.yml

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

stages:
  - build 
  - test
  - release

services:
  - docker:dind
    
build-front:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "frontend"
      --build-arg VERSION=${VERSION}
      --cache-repo ${CONTAINER_FRONTEND}:latest
      --dockerfile "Dockerfile"
      "${KANIKOPROXYBUILDARGS}"
      --destination "${CONTAINER_FRONTEND}:rc1"

spotbugs-sast:
  rules:
    - when: never

lint-dockerfile:
  image: docker:20-dind-rootless
  stage: test
  script:
    - cd frontend
    - docker run --rm -v $PWD:/root/ projectatomic/dockerfile-lint dockerfile_lint

sonar-check:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${SONAR_HOME}"
    SONAR_HOST_URL: "${SONAR_URL}"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd frontend
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=00_NBABENTSOV_FRONT -Dsonar.login="${TOKEN_FRONT}"
  allow_failure: true

release-docker:
  stage: release
  image: docker:20-dind-rootless
  variables:
    GIT_DEPTH: "0"
    GIT_STRATEGY: none
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull ${CONTAINER_FRONTEND}:rc1
    - docker tag ${CONTAINER_FRONTEND}:rc1 ${CONTAINER_FRONTEND}:latest
    - docker push ${CONTAINER_FRONTEND}:latest

